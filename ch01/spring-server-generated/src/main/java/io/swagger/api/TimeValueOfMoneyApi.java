/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.68).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import java.math.BigDecimal;
import io.swagger.model.ErrorDetail;
import io.swagger.model.SimpleInterestResponse;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2025-04-16T13:14:05.797687427Z[GMT]")
@Validated
public interface TimeValueOfMoneyApi {

    @Operation(summary = "Gets the calculated simple interest", description = "Gets the calculated simple interest for the requested parameters", tags={ "timeValueOfMoney" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", schema = @Schema(implementation = SimpleInterestResponse.class))),
        
        @ApiResponse(responseCode = "400", description = "Bad Request", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorDetail.class))) })
    @RequestMapping(value = "/timeValueOfMoney/simpleInterest",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<SimpleInterestResponse> getSimpleInterest(@NotNull @Parameter(in = ParameterIn.QUERY, description = "is the principal amount" ,required=true,schema=@Schema()) @Valid @RequestParam(value = "principal", required = true) BigDecimal principal
, @NotNull @Parameter(in = ParameterIn.QUERY, description = "is the annual rate of interest" ,required=true,schema=@Schema()) @Valid @RequestParam(value = "interestRate", required = true) BigDecimal interestRate
, @NotNull @Parameter(in = ParameterIn.QUERY, description = "is the time for which principal is invested" ,required=true,schema=@Schema()) @Valid @RequestParam(value = "time", required = true) BigDecimal time
, @Pattern(regexp="^(-|\\+)?(DAY|YEAR)$") @Parameter(in = ParameterIn.QUERY, description = "unit of time" ,schema=@Schema(allowableValues={ "DAY", "YEAR" }
, defaultValue="DAY")) @Valid @RequestParam(value = "unitOfTime", required = false, defaultValue="DAY") String unitOfTime
, @Pattern(regexp="^(-|\\+)?(360|365)$") @Parameter(in = ParameterIn.QUERY, description = "a day/year count convention" ,schema=@Schema(allowableValues={ "360", "365" }
, defaultValue="360")) @Valid @RequestParam(value = "yearCountConvention", required = false, defaultValue="360") BigDecimal yearCountConvention
);

}

